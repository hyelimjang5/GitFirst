<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 
	2단계 : 로그인 화면 커스터마이징 하기
	
	form-login 하위속성
		login-page : 커스텀 로그인 페이지를 지정.
		default-target-url : 로그인 후 기본으로 보여질 페이지 지정.
		authentication-failure-url : 로그인에 실패했을때 보여질 페이지 지정
		username-parameter : 로그인 시 사용할 아이디의 name속성값
		password-parameter : 로그인 시 사용할 패스워드의 name속성값
		
	logout 하위속성
		logout-url : 로그아웃에 사용될 url 지정
		logout-success-url : 로그아웃 성공시 이동할 페이지	
		
	access-denied-handler
		error-page : 로그인 하였으나 권한이 없는 페이지를 접근했을때 
			이동할 페이지 지정(전제조건이 로그인 후)
			
	※권한부여를 위한 권한명을 지정할때는 일반적으로 접두어 ROLE_명칭 형태로
		제작한다. 
	※intercept-url을 설정할때는 반드시 디테일한 권한(작은 권한)을 먼저 지정한 후
		아래로 가면서 전체에 대한 권한(큰 권한)을 부여해야 한다.
	 -->
	<!-- 
	3단계 : JDBC 이용하여 테이블에 저장된 회원정보 연동하기
	
	jdbc-user-service 
		data-source-ref : 데이터베이스 연결을 나타내는 dataSource로 해당
			연결은 반드시 root-context.xml에서 해야 한다.
			(servlet-context.xml에서 연결할 수 없음)
		role-prefix : "ROLE_"와 같은 권한명 앞에 붙는 접두어(prefix)를 지정한다.
			만약 해당 항목을 "ROLE_"로 지정한다면 테이블에서는 "USER"와 같이
			접두어를 제거한 상태로 권한명을 입력해야 한다.  
		users-by-username-query : 아이디를 이용하여 사용자 정보를 가져오는 
			쿼리문을 작성한다. 
		authorities-by-username-query : 아이디를 이용하여 권한정보를 가져오는
			쿼리문을 작성한다.
	 -->

	<security:http>
		<security:intercept-url pattern="/admin/login.do" access="permitAll"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		<security:form-login
			login-page="/admin/login.do"
			default-target-url="/admin"
			authentication-failure-url="/admin/login.do?error"
			username-parameter="admin_id"
			password-parameter="admin_pass"
		/>
		<security:logout
			logout-url="/admin/logout.do"
			logout-success-url="/admin/login.do"
		/>
		<security:access-denied-handler
			error-page="/admin/accessDenied.do"
		/>
	</security:http>
	
	<!-- 3단계 : 로그인 화면 커스텀 & 권한 DB 처리 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				role-prefix="" 
				users-by-username-query="select admin_id, admin_pass, enabled 
					from admin where admin_id=?"
				authorities-by-username-query="select admin_id, authority 
					from admin where admin_id=?"
			/>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
